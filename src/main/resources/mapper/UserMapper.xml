<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="in.koala.mapper.UserMapper">


    <insert id="signUp" parameterType="in.koala.domain.User">
        INSERT INTO user(nickname, account, password, find_email, profile, user_type, is_auth, created_at, updated_at)
        VALUES(#{nickname}, #{account}, #{password}, #{find_email}, #{profile}, DEFAULT, DEFAULT , DEFAULT, DEFAULT);
        <selectKey keyProperty="id" resultType="Long">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <insert id="snsSignUp" parameterType="in.koala.domain.User">
        INSERT INTO user(nickname, account, sns_email, profile, user_type, is_auth, created_at, updated_at)
        VALUES(#{nickname}, #{account}, #{sns_email}, #{profile}, #{user_type}, DEFAULT, DEFAULT, DEFAULT);
        <selectKey keyProperty="id" resultType="Long">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <select id="getIdByAccount" parameterType="String" resultType="Long">
        SELECT id FROM user WHERE account=#{account} AND deleted_at IS NULL;
    </select>

    <select id="getUserByFindEmail" resultType="in.koala.domain.User">
        SELECT
        <include refid="userInfo">
            <property name="alias" value=""/>
        </include>
        FROM user
        WHERE find_email=#{email} AND deleted_at IS NULL
    </select>
    
    <select id="getUserByAccount" parameterType="String" resultType="in.koala.domain.User">
        SELECT
        <include refid="userInfo">
            <property name="alias" value=""/>
        </include>
        FROM user
        WHERE account=#{account} AND deleted_at IS NULL
    </select>

    <select id="getUserById" parameterType="Long" resultType="in.koala.domain.User">
        SELECT
        <include refid="userInfo">
            <property name="alias" value=""/>
        </include>
        FROM user
        WHERE id=#{id} AND deleted_at IS NULL
    </select>

    <select id="checkNickname" parameterType="String" resultType="Integer">
        SELECT count(*) FROM user WHERE nickname=#{nickname};
    </select>

    <select id="getUserPassword" parameterType="String" resultType="in.koala.domain.User">
        SELECT id, password FROM user WHERE account=#{account} AND deleted_at IS NULL
    </select>

    <update id="updateNickname" parameterType="in.koala.domain.User">
        UPDATE user
        SET
            nickname=#{nickname}
        WHERE id = #{id}
    </update>

    <update id="updatePassword">
        UPDATE user
        SET
            password=#{password}
        WHERE id=#{id}
    </update>

    <update id="updateIsAuth">
        UPDATE user
        SET
            is_auth=1
        WHERE id=#{id}
    </update>

    <update id="softDeleteUser">
        UPDATE user
        SET
            deleted_at=CURRENT_TIMESTAMP,
            account=#{account},
            find_email=#{find_email},
            sns_email=#{sns_email},
            nickname=#{nickname}
        WHERE id=#{id}
    </update>

    <select id="test" resultType="String">
        SELECT nickname from user where id=1;
    </select>

    <insert id="insertNonMemberUser" parameterType="in.koala.domain.User">
        INSERT INTO user(nickname, account, is_member)
        VALUES(#{nickname}, #{account}, #{is_member})
        <selectKey keyProperty="id" resultType="Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="insertDeviceToken">
        INSERT INTO device_token(token) VALUES(#{token})
    </insert>

    <sql id="userInfo">
        ${alias}id, 
        ${alias}account,
        ${alias}find_email,
        ${alias}sns_email,
        ${alias}nickname,
        ${alias}profile,
        ${alias}user_type,
        ${alias}is_auth,
        ${alias}created_at,
        ${alias}updated_at
    </sql>

</mapper>