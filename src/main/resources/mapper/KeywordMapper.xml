<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="in.koala.mapper.KeywordMapper">

    <select id = "myKeywordList" parameterType="java.lang.Long" resultType="in.koala.domain.Keyword">
        SELECT k.id, k.name, IFNULL(b.noticeNum, 0) AS noticeNum
        FROM keyword AS k
            LEFT OUTER JOIN (
                SELECT n.keyword_id, count(n.crawling_id) AS noticeNum
                FROM notice AS n
                WHERE n.is_read = 0 AND n.is_deleted = 0
                GROUP BY n.keyword_id
        ) AS b ON b.keyword_id = k.id
        WHERE k.is_deleted = 0
          AND k.user_id = #{userId};
    </select>

    <!--키워드 등록 (1. 유저별로 기존에 등록한 키워드와 지금 등록하려는 키워드가 중복되는지 확인)-->
    <select id="checkDuplicateUsersKeyword" parameterType="in.koala.domain.Keyword" resultType="java.lang.Long">
        SELECT id
        FROM keyword
        WHERE user_id = #{userId} AND name = #{name}
    </select>

    <!--키워드 등록 (2. 키워드 등록)-->
    <insert id="insertUsersKeyword" parameterType="in.koala.domain.Keyword">
        INSERT INTO keyword (user_id, name, is_important, alarm_mode, alarm_cycle, created_at)
        VALUES (#{userId}, #{name}, #{isImportant}, #{alarmMode}, #{alarmCycle}, #{createdAt})
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!--키워드 등록 (3. 키워드 별로 구독하는 사이트에 등록)-->
    <insert id="insertUsersKeywordSite">
        INSERT INTO keyword_site(keyword_id, site_name, created_at)
        VALUES
        <foreach item="site" separator=" , " collection="siteList">
            (
            #{keywordId},
            #{site, jdbcType=VARCHAR},
            #{createdAt}
            )
        </foreach>;
    </insert>

    <!--키워드 삭제 (지금은 멀티쿼리 사용중이나, join문 활용하여 삭제할수 있게 리팩토링 필요)-->
    <update id="deleteKeyword">
        UPDATE keyword
        SET is_deleted = 1
        WHERE user_id = #{userId}
            AND name = #{keywordName};

        UPDATE keyword_site
        SET is_deleted = 1
        WHERE keyword_id = (
                SELECT id
                FROM keyword
                WHERE user_id = #{userId}
                  AND name = #{keywordName}
            );
    </update>

    <select id="getKeywordSite" resultType="java.lang.Integer">
        SELECT ks.site_name
        FROM keyword_site as ks
        INNER JOIN keyword as k
        ON k.id = ks.keyword_id
            AND ks.is_deleted IS NULL
            AND k.user_id = #{userId}
            AND k.name = #{keywordName};
    </select>

    <select id="getKeywordId" resultType="java.lang.Long">
        SELECT id
        FROM keyword
        WHERE user_id = #{userId}
            AND name = #{keywordName};
    </select>

    <update id="modifyKeywordSite">
        <foreach item="site" separator=";" index="index" collection="existingList">
            UPDATE keyword_site
            <set>
                is_deleted = 1
            </set>
            WHERE keyword_id = #{keywordId}
            AND site_name = #{site}
        </foreach>;
    </update>

    <update id="modifyKeyword">
        UPDATE keyword
        SET name = #{keyword.name}, is_important = #{keyword.isImportant},
            alarm_mode = #{keyword.alarmMode}, alarm_cycle = #{keyword.alarmCycle},
            updated_at = #{createdAt}
        WHERE id = (
            SELECT id
            FROM (
                SELECT id
                FROM keyword
                WHERE user_id = #{userId}
                AND name = #{keywordName}
            ) AS sub_table
        );
    </update>

    <select id="getKeywordNotice" resultType = "in.koala.domain.Notice">
        SELECT n.id, n.is_read as isRead, c.site, c.title, c.url, c.created_at AS createdAt
        FROM notice AS n
        INNER JOIN crawling AS c
        ON c.id = n.crawling_id
        INNER JOIN keyword AS k
        ON k.id = n.keyword_id
        WHERE k.name = #{keywordName}
        AND k.user_id = #{userId}
        AND n.is_deleted = 0
        <if test="site != null">
            AND site = #{site}
        </if>
    </select>

    <select id="getSearchNotice" resultType="in.koala.domain.Notice">
        SELECT a.id, a.isRead, a.site, a.title, a.url, a.createdAt
        FROM (
                 SELECT n.id, n.is_read AS isRead, c.site, c.title, c.url, c.created_at AS createdAt
                 FROM notice AS n
                          INNER JOIN crawling AS c
                                     ON c.id = n.crawling_id
                          INNER JOIN keyword AS k
                                     ON k.id = n.keyword_id
                 WHERE k.name = #{keywordName}
                   AND k.user_id = #{userId}
                   <if test="site != null">
                        AND site = #{site}
                   </if>
        ) AS a
        WHERE a.title LIKE CONCAT('%',#{word},'%');
    </select>

    <update id="noticeRead">
        UPDATE notice
        SET is_read = 1
        WHERE id = #{noticeId}
    </update>

    <update id="deleteNotice">
        UPDATE notice
        SET is_deleted = 1
        WHERE id = #{noticeId}
    </update>

    <select id="searchKeyword" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT name
        FROM keyword
        WHERE name LIKE concat("%", #{keyword}, "%");
    </select>

    <select id="getSiteList" resultType="java.lang.Integer">
        SELECT site_name
        FROM keyword_site
        WHERE is_deleted = 0
          AND keyword_id = (
            SELECT id
            FROM keyword
            WHERE user_id = 32
              AND name = "국가장학금"
        );
    </select>

</mapper>